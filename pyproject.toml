[project]
name = "django-solomon"
dynamic = ["version"]
description = "Add your description here"
authors = [{ name = "Oliver Andrich", email = "oliver@andrich.me" }]
readme = "README.md"
requires-python = ">=3.9"
dependencies = ["django-appconf>=1.0.6", "django>=4.2"]
license = { file = "LICENSE" }
keywords = ["django", "tailwind", "css"]

[project.urls]
Home = "https://django-solomon.andrich.me/"
Documentation = "https://django-solomon.andrich.me/"
Repository = "https://github.com/oliverandrich/django-solomon"

[tool.uv]
dev-dependencies = [
    "django-types>=0.19.1",
    "pytest-cov>=5.0.0",
    "pytest-django>=4.9.0",
    "pytest-mock>=3.14.0",
    "pytest-randomly>=3.15.0",
    "pytest-sugar>=1.0.0",
    "pytest>=8.3.3",
    "time-machine>=2.15.0",
    "faker>=30.0.0",
]

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/solomon"]

[tool.hatch.version]
source = "vcs"

# Pyright
[tool.pyright]
venvPath = "."
venv = ".venv"
typeCheckingMode = "basic"
ignore = ["./tests/**/*"]

# Ruff
[tool.ruff]
target-version = "py38"
line-length = 120

[tool.ruff.format]
exclude = ["**/migrations/*"]

[tool.ruff.lint]
select = [
    "A",   # flake8-builtins
    "ARG", # flake8-unused-arguments
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "DJ",  # flake8-django
    "E",   # pycodestyle
    "F",   # pyflakes
    "FBT", # flake8-boolean-trap
    "N",   # pep8-naming
    "Q",   # flake8-quotes
    "TID", # flake8-tidy-imports
    "W",   # pycodestyle
    "YTT", # flake8-2020
]
ignore = [
    # Allow non-abstract empty methods in abstract base classes
    "B027",
    # Allow boolean positional values in function calls, like `dict.get(... True)`
    "FBT003",
    # Ignore complexity
    "C901",
]
unfixable = [
    # Don't touch unused imports
    "F401",
    # Don't touch unused variables
    "F841",
]

[tool.ruff.lint.isort]
known-first-party = ["solomon"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.per-file-ignores]
"tests/**/*" = ["PLR2004", "S101", "TID252", "ARG001"]
"tests/snapshots/*" = ["ALL"]
"**/migrations/*" = ["ALL"]

# Pytest
[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "tests.settings"
pythonpath = [".", "src"]
testpaths = ["tests"]

# Coverage
[tool.coverage.run]
source = ["src"]
branch = true
parallel = true
omit = ["*/migrations/*", "*/tests/*", "*/conftest.py"]

[tool.coverage.report]
show_missing = true
exclude_lines = [
    "no cov",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "pass",
    "if __name__ == .__main__.:",
]
